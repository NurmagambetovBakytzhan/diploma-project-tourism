// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/users": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Fetches a list of all registered users.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get all users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.User"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.Category": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "tourCategories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.TourCategory"
                    }
                }
            }
        },
        "entity.Image": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "tour": {
                    "$ref": "#/definitions/entity.Tour"
                },
                "tour_id": {
                    "type": "string"
                }
            }
        },
        "entity.Purchase": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "string"
                },
                "Status": {
                    "type": "string"
                },
                "TourEvent": {
                    "$ref": "#/definitions/entity.TourEvent"
                },
                "TourEventID": {
                    "type": "string"
                },
                "User": {
                    "$ref": "#/definitions/entity.User"
                },
                "UserID": {
                    "type": "string"
                }
            }
        },
        "entity.Tour": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "string"
                },
                "route": {
                    "type": "string"
                },
                "tour_categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.TourCategory"
                    }
                },
                "tour_events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.TourEvent"
                    }
                },
                "tour_images": {
                    "description": "Relationships",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Image"
                    }
                },
                "tour_location": {
                    "$ref": "#/definitions/entity.TourLocation"
                },
                "tour_videos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Video"
                    }
                }
            }
        },
        "entity.TourCategory": {
            "type": "object",
            "properties": {
                "category": {
                    "$ref": "#/definitions/entity.Category"
                },
                "categoryID": {
                    "type": "string"
                },
                "tour": {
                    "$ref": "#/definitions/entity.Tour"
                },
                "tour_id": {
                    "type": "string"
                }
            }
        },
        "entity.TourEvent": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "string"
                },
                "amount": {
                    "type": "number"
                },
                "data": {
                    "type": "string"
                },
                "is_opened": {
                    "type": "boolean"
                },
                "place": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "purchases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Purchase"
                    }
                },
                "tour": {
                    "$ref": "#/definitions/entity.Tour"
                },
                "tour_id": {
                    "type": "string"
                }
            }
        },
        "entity.TourLocation": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "tour": {
                    "$ref": "#/definitions/entity.Tour"
                },
                "tour_id": {
                    "type": "string"
                }
            }
        },
        "entity.User": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "string"
                },
                "createdTours": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Tour"
                    }
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "purchasedTourEvents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Purchase"
                    }
                },
                "role": {
                    "description": "user,admin, etc.",
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "entity.Video": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "string"
                },
                "tour": {
                    "$ref": "#/definitions/entity.Tour"
                },
                "tour_id": {
                    "type": "string"
                },
                "video_url": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}

{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/social/chats": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "Bearer": []
                    }
                ],
                "description": "Fetches all chats where the authenticated user is a participant.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chats"
                ],
                "summary": "Get user chats",
                "responses": {
                    "200": {
                        "description": "List of user's chats",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "Bearer": []
                    }
                ],
                "description": "Allows the user to create a new chat.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chats"
                ],
                "summary": "Create a chat",
                "parameters": [
                    {
                        "description": "Chat creation details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.CreateChatDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created chat details",
                        "schema": {
                            "$ref": "#/definitions/entity.Chat"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/social/chats/enter": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "Bearer": []
                    }
                ],
                "description": "Adds the user to an existing chat if valid chat ID is provided.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chats"
                ],
                "summary": "Enter a chat",
                "parameters": [
                    {
                        "description": "Chat ID DTO",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.ChatIdStringDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid chat ID or request body",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/social/chats/{id}/messages": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieves all messages from a specific chat if the user is a participant.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chats"
                ],
                "summary": "Get chat messages",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chat ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of messages",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid chat ID or user not in chat",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v1/ws": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "Bearer": []
                    }
                ],
                "description": "Manages WebSocket connections for real-time chat functionality.",
                "tags": [
                    "websocket"
                ],
                "summary": "WebSocket chat connection",
                "responses": {}
            }
        }
    },
    "definitions": {
        "entity.Chat": {
            "type": "object",
            "properties": {
                "ChatMessages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Message"
                    }
                },
                "ID": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "$ref": "#/definitions/entity.User"
                },
                "owner_id": {
                    "type": "string"
                }
            }
        },
        "entity.ChatIdStringDTO": {
            "type": "object",
            "properties": {
                "chat_id": {
                    "type": "string"
                }
            }
        },
        "entity.CreateChatDTO": {
            "type": "object",
            "required": [
                "description",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "userID": {
                    "type": "string"
                }
            }
        },
        "entity.Message": {
            "type": "object",
            "properties": {
                "ChatID": {
                    "type": "string"
                },
                "ID": {
                    "type": "string"
                },
                "UserID": {
                    "type": "string"
                },
                "chat": {
                    "$ref": "#/definitions/entity.Chat"
                },
                "text": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/entity.User"
                }
            }
        },
        "entity.User": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "description": "user,admin, etc.",
                    "type": "string"
                },
                "userMessages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Message"
                    }
                },
                "username": {
                    "type": "string"
                }
            }
        }
    }
}